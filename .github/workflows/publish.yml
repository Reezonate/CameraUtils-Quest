# Credit to darknight1050 https://github.com/darknight1050/CrashReporter/blob/master/.github/workflows/build-ndk.yml

name: NDK build

on:
  push:
    tags:
      - "v*"

env:
  module_id: camera-utils
  qmodName: CameraUtils

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        name: Checkout
        with:
          submodules: true
          lfs: true

      - uses: seanmiddleditch/gha-setup-ninja@v3

      - name: Create ndkpath.txt
        run: |
          echo "$ANDROID_NDK_LATEST_HOME" > ${GITHUB_WORKSPACE}/ndkpath.txt
          cat ${GITHUB_WORKSPACE}/ndkpath.txt

      - name: Get Tag Version
        id: get_tag_version
        run: |
          echo ${GITHUB_REF#refs/tags/}
          echo ::set-output name=TAG::${GITHUB_REF#refs/tags/}
          echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/v}

      - name: QPM Rust Action
        uses: Fernthedev/qpm-rust-action@main
        with:
          #required
          workflow_token: ${{secrets.GITHUB_TOKEN}}

          restore: true # will run restore on download
          cache: true #will cache dependencies

          publish: true
          publish_token: ${{secrets.PUBLISH_KEY}}

          version: ${{ steps.get_tag_version.outputs.VERSION }}
          tag: ${{ steps.get_tag_version.outputs.TAG }}

          # set to true if applicable, ASSUMES the file is already a release asset
          qpm_release_bin: true
          qpm_debug_bin: true
          qpm_qmod: ${{env.qmodName}}.qmod

      - name: Build
        run: |
          cd ${GITHUB_WORKSPACE}
          qpm-rust qmod build
          pwsh -Command ./build.ps1
      - name: Create Qmod
        run: |
          pwsh -Command ./buildQMOD.ps1 ${{env.qmodName}}
      - name: Get Library Name
        id: libname
        run: |
          cd ./build/
          pattern="lib${module_id}*.so"
          files=( $pattern )
          echo ::set-output name=NAME::"${files[0]}"

      - name: Upload so artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.libname.outputs.NAME }}
          path: ./build/${{ steps.libname.outputs.NAME }}
          if-no-files-found: error

      - name: Upload debug artifact
        uses: actions/upload-artifact@v2
        with:
          name: debug_${{ steps.libname.outputs.NAME }}
          path: ./build/debug/${{ steps.libname.outputs.NAME }}
          if-no-files-found: error

      - name: Upload qmod artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{env.qmodName}}.qmod
          path: ./${{ env.qmodName }}.qmod
          if-no-files-found: error

      - name: Prepare debug artifact for release
        run: mv "./build/debug/${{ steps.libname.outputs.NAME }}" "./debug_${{ steps.libname.outputs.NAME }}"

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ./${{ env.qmodName }}.qmod
            ./build/${{ steps.libname.outputs.NAME }}
            ./debug_${{ steps.libname.outputs.NAME }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}